<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[如何利用Github搭建个人博客]]></title>
    <url>%2F2019%2F08%2F28%2F%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[注：12Hexo是一个快速、简洁且高效的博客框架。 Hexo使用Markdown解析文章，在几秒内，即可利用靓丽的主题（如NexT）生成静态网页。 ** 特别推荐 **Ⅰ: 搭建指南：1. Hexo 博客搭建指南2. 【Hexo搭建独立博客全纪录】（三）使用Hexo搭建博客Ⅱ: 添加评论功能：3. hexo - Next 主题添加评论功能4. Next主题增加Gitment评论系统5. 添加Gitment评论系统踩过的坑6. Gitment评论功能接入踩坑教程Ⅲ: 主题优化：7. hexo的next主题个性化教程:打造炫酷网站Ⅳ: 博客源备份：8. GitHub + Hexo搭建自己博客(三) 多设备管理 ** 正文 **一、基础搭建1. 注意事项:每次新增或更新博客时，要注意执行以下命令: 123$ hexo clean //清除缓存文件db.json和已生成的静态文件public$ hexo g //生成网站静态文件到默认设置的public文件夹$ hexo d //部署网站到设定的仓库 或把后两条命令合二为一: 12$ hexo clean //清除缓存文件db.json和已生成的静态文件public$ hexo d -g //生成并上传 Hexo博客搭建全攻略 【Hexo搭建独立博客全纪录】（三）使用Hexo搭建博客 Hexo(2)-部署博客及更新博文 Hexo博客的搭建及同步更新 如何快速搭建自己的github.io博客 持续更新】最全Hexo博客搭建+主题优化+插件配置+常用操作+错误分析 免费个人博客搭建详解 Hexo搭建博客教程 2. 搭建过程中遇到的问题: 解决用Hexo和GitHub搭建博客时hexo d命令报错问题 将本地 Hexo 仓库部署到 GitHub 上 V.GitHub + Hexo (2)：部署博客及更新博文 3. 博客模板推荐: 使用hexo+github搭建免费个人博客详细教程 博客搭建详细教程 Github搭建个人博客（2019最新版,亲测） jekyll框架 hexo框架 hexo-theme-next——Elegant theme for Hexo. hexo-theme-yilia——一个简洁优雅的hexo主题 hexo-theme-matery——一个Hexo主题 模板博客 4. 大神博客推荐: 韦阳的博客 超详细Hexo+Github博客搭建小白教程——韦阳博客 超详细Hexo+Github博客搭建小白教程——知乎 二、Gitment：使用 GitHub Issues 搭建评论系统 Gitment：使用 GitHub Issues 搭建评论系统 使用hexo搭建github博客 hexo - Next 主题添加评论功能 gitment——Github官网 三、搭建评论系统时遇到的问题汇总1. 添加评论时出现”[object ProgressEvent] “问题:object ProgressEvent问题解决:找到next主题中的gitment评论文件 next/layout/_third-party/comments/gitment.swig，更改以下代码: 12345678910&lt;!-- 原代码 --&gt;// gitment的英文版&lt;link rel="stylesheet" href="https://imsun.github.io/gitment/style/default.css"&gt;&lt;script src="https://imsun.github.io/gitment/dist/gitment.browser.js"&gt;&lt;/script&gt;// gitment的汉化版// 只需到模板里将原来定义CSS和JS的那两行改成：&lt;!-- 请使用下面的替换 2019-06-30更新--&gt;&lt;link rel="stylesheet" href="https://billts.site/extra_css/gitment.css"&gt;&lt;script src="https://billts.site/js/gitment.js"&gt;&lt;/script&gt; 完整代码如下： 1234567891011&lt;!-- LOCAL: You can save these files to your site and update links --&gt; &#123;% if theme.gitment.mint %&#125; &#123;% set CommentsClass = "Gitmint" %&#125; &lt;link rel="stylesheet" href="https://aimingoo.github.io/gitmint/style/default.css"&gt; &lt;script src="https://aimingoo.github.io/gitmint/dist/gitmint.browser.js"&gt;&lt;/script&gt; &#123;% else %&#125; &#123;% set CommentsClass = "Gitment" %&#125; &lt;link rel="stylesheet" href="https://billts.site/extra_css/gitment.css"&gt; &lt;script src="https://billts.site/js/gitment.js"&gt;&lt;/script&gt; &#123;% endif %&#125;&lt;!-- END LOCAL --&gt; 重新清理缓存，部署博客即可留言。 Next主题增加Gitment评论系统 [object ProgressEvent] #170 gitment评论模块接入hexo | 我的博客 #8 hexo博客配置-添加评论系统-gitment和valine-需注册 gitment评论模块接入hexo hexo博客的gitment评论开启一直失败 #178 GitHub Pages个人博客搭建流程2. 使用Gitment遇到的问题: Error：validation failed 1234// 原配置id: '&lt;%= page.title %&gt;'// 修改后的配置id: '&lt;%= page.date %&gt;' Gitment评论功能接入踩坑教程 添加Gitment评论系统踩过的坑 使用Gitment遇到的问题: Error：validation failed Hexo+gitment的Error：validation failed gitalk Error: Validation Failed Hexo添加gitalk评论插件及 Error: Validation Failed 报错解决 处理Gitalk中由于文章URL过长导致的Validation Failed(422) 所有文章一键初始化评论 #5 JavaScript-MD5 issue的Label有长度限制！把id留空可能导致 Error: Validation Failed #112 Error: Validation Failed #118 报错出现 Error: Validation Failed. #102 四、Hexo的Next主题详细配置1. 整体配置： hexo的next主题个性化教程:打造炫酷网站 hexo的next主题个性化配置教程 超详细Hexo+Github博客搭建小白教程 Hexo的Next主题详细配置 开始使用 主题配置 hexo+next 部署各种炫酷博客特效 2018 - Hexo - Next - Mist 风格主题的美化（二） 你见过的最棒的个人博客界面是什么样的？ 【12】2小时还你一个集打赏、评论、RSS功能于一身的个人博客 Hexo+Next主题优化 HEXO+NEXT主题个性化配置 对NexT主题风格的修改 Hexo-NexT配置超炫网页效果 hexo指南 使用next主题配置博客基本信息 NexT的主题设定与配置 Github+Hexo一站式部署个人博客 (原创) 使用Hexo+Github一步步搭建属于自己的博客（进阶） hexo next主题优化，打造个人精致网站 hexo的next主题个性化配置 Hexo+Next个人博客主题优化 GitHub + Hexo搭建自己博客(二) Next主题配置2. 局部配置： Hexo博客NexT主题美化之顶部加载进度条 Hexo Next 添加萌萌的宠物live2d Hexo博客添加在线联系功能 hexo next 配置 DaoVoice 实现在线聊天功能 DaoVoice控制台 设置文章打赏 Hexo NexT主题添加点击爱心效果 Hexo之在右上角或者左上角实现fork me on github Hexo + Next 的优化 Hexo Next 主题中添加本地搜索功能 为 Hexo 博客创建本地搜索引擎 hexo博文压缩 Next主题美化(持续更新) Hexo NexT主题中添加网页标题崩溃欺骗搞怪特效 动态title-网站标题崩溃欺骗 五、GitHub + Hexo搭建自己博客：备份博客源文件 GitHub + Hexo搭建自己博客(三) 多设备管理 超详细Hexo+Github博客搭建小白教程 六、Hexo + Next 主题博客添加分享功能首先在themes\next\layout\_partials\share中新建一个文件socialshare.swig,编辑内容如下： 123456789101112131415161718&lt;script src="../lib/jquery/index.js"&gt;&lt;/script&gt;&lt;link href="https://cdn.bootcss.com/social-share.js/1.0.16/css/share.min.css" rel="stylesheet"&gt;&lt;script src="https://cdn.bootcss.com/social-share.js/1.0.16/js/jquery.share.min.js"&gt;&lt;/script&gt;&lt;script&gt; var $config = &#123; url : window.location.href,// 网址，默认使用 window.location.href source : '', // 来源（QQ空间会用到）, 默认读取head标签：&lt;meta name="site" content="http://overtrue" /&gt; title : '', // 标题，默认读取 document.title 或者 &lt;meta name="title" content="share.js" /&gt; description : '', // 描述, 默认读取head标签：&lt;meta name="description" content="PHP弱类型的实现原理分析" /&gt; image : '', // 图片, 默认取网页中第一个img标签 sites : ['qzone', 'qq', 'weibo','wechat'], // 启用的站点 disabled : ['google', 'facebook', 'twitter'], // 禁用的站点 wechatQrcodeTitle : '微信扫一扫：分享', // 微信二维码提示文字 wechatQrcodeHelper : '&lt;p&gt;微信里点“发现”，扫一下&lt;/p&gt;&lt;p&gt;二维码便可将本文分享至朋友圈。&lt;/p&gt;', target : '_blank' //打开方式 &#125;; $('.social-share').share($config);&lt;/script&gt; 然后找到themes\next\layout_macro中的文件post.swig中的这部分代码 1&lt;footer class="post-footer"&gt; 之前贴上以下代码 1234&#123;% if theme.social_share and not is_index %&#125; &#123;% include '../_partials/share/socialshare.swig' %&#125; &lt;div class="social-share"&gt;&lt;/div&gt; &#123;% endif %&#125; 在主题配置文件, _config.yml 文件中增加以下代码 12social_share: enable: true 保存修改后，然后 hexo clean ，hexo g ，hexo d 即可看到点击效果。 参考 hexo 调用share.js Hexo + Next 主题博客分享功能 基于Hexo搭建个人博客——进阶篇(从入门到入土) 个性化hexo博客，添加评论系统，分享，友情链接功能 Mob开发者后台使用指南 ShareSDK-for-iOS Hexo博客添加分享功能 hexo next主题为博客添加分享功能 hexo next主题为博客添加分享功能 Hexo添加分享功能 hexo+next博客进阶攻略 Hexo NexT主题中添加百度分享功能 百度分享不支持Https的解决方案 Hexo博客NexT主题添加百度分享 Hexo+Github搭建个人博客(二)——配置&amp;主题 Hexo+Github搭建个人博客(三)——百度分享集成 七、Hexo博客 站内搜索 配置 (swiftype) 前言 随着博客的文章增多，添加一个博客站内搜索的功能就显得很有必要。 而第三方站内搜索的插件有： google自定义搜索（免费的标准版貌似有广告而且要科学上网） 百度站内搜索（貌似不支持https并且只显示收录的页面） swiftype站内搜索（我的选择） swiftype网站配置 首先注册swiftype账号并登录，也可直接使用google账号登录 然后选择CREATE A NEW ENGINE,再进行填入网址等一系列操作,设置默认就好 得到左边为各项设置的搜索引擎界面 点击install search，进入安装代码界面,并将这段代码复制 点击change configuration，可以看到左边有设置选项 特别注意，search field选项 如果博客本身就有搜索框，那么修改搜索框的class为st-default-search-input就好了 但是如果没有，则可以自行添加搜索框，并修改class；或者选择swiftype提供的搜索框即可 由于我的博客（random主题）本身没有搜索框，所以直接选择了swiftype提供的搜索框 同时，可以在左侧的设置选项中查看搜索统计情况、预览搜索结果、设置搜索权重、添加域名、查看抓取的页面等 注意：swiftype的爬虫抓取页面需要一定的时间，所以可能需要等一会 到此为止，swiftype网站的配置就完成了 博客的配置 打开博客主题的配置文件_config.yml，在最后添加 # swiftype站内搜索 swift_search: enable: true123 打开博客主题的themes\next\layout\_partials文件夹，在其中找到footer.swig文件（或者其他以footer命名的文件），把之前复制的脚本代码粘贴到其中 注意：要放在body标签中 至此，博客站内搜索的工作就做完了，然后重新将博客deploy即可 搜索效果 原文地址 参考 Hexo博客 站内搜索 配置 (swiftype) hexo干货系列：（五）hexo添加站内搜索 如何在个人博客引擎 Hexo 中添加 Swiftype 搜索组件 如何在 Hexo 博客引擎中添加 Swiftype 搜索组件 Install Site Search]]></content>
      <categories>
        <category>Github</category>
      </categories>
      <tags>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Learn regex the easy way]]></title>
    <url>%2F2019%2F08%2F27%2FLearn%20regex%20the%20easy%20way%2F</url>
    <content type="text"><![CDATA[learn-regex 翻译: English Español Français Português do Brasil 中文版 日本語 한국어 Turkish Greek Magyar Polish Русский Tiếng Việt 什么是正则表达式? 正则表达式是一组由字母和符号组成的特殊文本, 它可以用来从文本中找出满足你想要的格式的句子. 一个正则表达式是在一个主体字符串中从左到右匹配字符串时的一种样式.“Regular expression”这个词比较拗口, 我们常使用缩写的术语”regex”或”regexp”.正则表达式可以从一个基础字符串中根据一定的匹配模式替换文本中的字符串、验证表单、提取字符串等等. 想象你正在写一个应用, 然后你想设定一个用户命名的规则, 让用户名包含字符,数字,下划线和连字符,以及限制字符的个数,好让名字看起来没那么丑.我们使用以下正则表达式来验证一个用户名: 以上的正则表达式可以接受 john_doe, jo-hn_doe, john12_as.但不匹配Jo, 因为它包含了大写的字母而且太短了. 目录 1. 基本匹配 2. 元字符 2.1 点运算符 . 2.2 字符集 2.2.1 否定字符集 2.3 重复次数 2.3.1 * 号 2.3.2 + 号 2.3.3 ? 号 2.4 {} 号 2.5 (…) 特征标群 2.6 | 或运算符 2.7 转码特殊字符 2.8 锚点 2.8.1 ^ 号 2.8.2 $ 号 3. 简写字符集 4. 零宽度断言(前后预查) 4.1 ?=… 正先行断言 4.2 ?!… 负先行断言 4.3 ?&lt;= … 正后发断言 4.4 ?&lt;!… 负后发断言 5. 标志 5.1 忽略大小写 (Case Insensitive) 5.2 全局搜索 (Global search) 5.3 多行修饰符 (Multiline) 额外补充 贡献 许可证 1. 基本匹配正则表达式其实就是在执行搜索时的格式, 它由一些字母和数字组合而成.例如: 一个正则表达式 the, 它表示一个规则: 由字母t开始,接着是h,再接着是e. "the" => The fat cat sat on the mat. 在线练习 正则表达式123匹配字符串123. 它逐个字符的与输入的正则表达式做比较. 正则表达式是大小写敏感的, 所以The不会匹配the. "The" => The fat cat sat on the mat. 在线练习 2. 元字符正则表达式主要依赖于元字符.元字符不代表他们本身的字面意思, 他们都有特殊的含义. 一些元字符写在方括号中的时候有一些特殊的意思. 以下是一些元字符的介绍: 元字符 描述 . 句号匹配任意单个字符除了换行符. [ ] 字符种类. 匹配方括号内的任意字符. [^ ] 否定的字符种类. 匹配除了方括号里的任意字符 * 匹配&gt;=0个重复的在*号之前的字符. + 匹配&gt;=1个重复的+号前的字符. ? 标记?之前的字符为可选. {n,m} 匹配num个大括号之前的字符 (n &lt;= num &lt;= m). (xyz) 字符集, 匹配与 xyz 完全相等的字符串. &#124; 或运算符,匹配符号前或后的字符. &#92; 转义字符,用于匹配一些保留的字符 [ ] ( ) { } . * + ? ^ $ \ &#124; ^ 从开始行开始匹配. $ 从末端开始匹配. 2.1 点运算符 ..是元字符中最简单的例子..匹配任意单个字符, 但不匹配换行符.例如, 表达式.ar匹配一个任意字符后面跟着是a和r的字符串. ".ar" => The car parked in the garage. 在线练习 2.2 字符集字符集也叫做字符类.方括号用来指定一个字符集.在方括号中使用连字符来指定字符集的范围.在方括号中的字符集不关心顺序.例如, 表达式[Tt]he 匹配 the 和 The. "[Tt]he" => The car parked in the garage. 在线练习 方括号的句号就表示句号.表达式 ar[.] 匹配 ar.字符串 "ar[.]" => A garage is a good place to park a car. 在线练习 2.2.1 否定字符集一般来说 ^ 表示一个字符串的开头, 但它用在一个方括号的开头的时候, 它表示这个字符集是否定的.例如, 表达式[^c]ar 匹配一个后面跟着ar的除了c的任意字符. "[^c]ar" => The car parked in the garage. 在线练习 2.3 重复次数后面跟着元字符 +, * or ? 的, 用来指定匹配子模式的次数.这些元字符在不同的情况下有着不同的意思. 2.3.1 * 号*号匹配 在*之前的字符出现大于等于0次.例如, 表达式 a* 匹配以0或更多个a开头的字符, 因为有0个这个条件, 其实也就匹配了所有的字符. 表达式[a-z]* 匹配一个行中所有以小写字母开头的字符串. "[a-z]*" => The car parked in the garage #21. 在线练习 *字符和.字符搭配可以匹配所有的字符.*.*和表示匹配空格的符号\s连起来用, 如表达式\s*cat\s*匹配0或更多个空格开头和0或更多个空格结尾的cat字符串. "\s*cat\s*" => The fat cat sat on the concatenation. 在线练习 2.3.2 + 号+号匹配+号之前的字符出现 &gt;=1 次.例如表达式c.+t 匹配以首字母c开头以t结尾,中间跟着任意个字符的字符串. "c.+t" => The fat cat sat on the mat. 在线练习 2.3.3 ? 号在正则表达式中元字符 ? 标记在符号前面的字符为可选, 即出现 0 或 1 次.例如, 表达式 [T]?he 匹配字符串 he 和 The. "[T]he" => The car is parked in the garage. 在线练习 "[T]?he" => The car is parked in the garage. 在线练习 2.4 {} 号在正则表达式中 {} 是一个量词, 常用来一个或一组字符可以重复出现的次数.例如, 表达式 [0-9]{2,3} 匹配最少 2 位最多 3 位 0~9 的数字. "[0-9]{2,3}" => The number was 9.9997 but we rounded it off to 10.0. 在线练习 我们可以省略第二个参数.例如, [0-9]{2,} 匹配至少两位 0~9 的数字. "[0-9]{2,}" => The number was 9.9997 but we rounded it off to 10.0. 在线练习 如果逗号也省略掉则表示重复固定的次数.例如, [0-9]{3} 匹配3位数字 "[0-9]{3}" => The number was 9.9997 but we rounded it off to 10.0. 在线练习 2.5 (...) 特征标群特征标群是一组写在 (...) 中的子模式. 例如之前说的 {} 是用来表示前面一个字符出现指定次数. 但如果在 {} 前加入特征标群则表示整个标群内的字符重复 N 次. 例如, 表达式 (ab)* 匹配连续出现 0 或更多个 ab. 我们还可以在 () 中用或字符 | 表示或. 例如, (c|g|p)ar 匹配 car 或 gar 或 par. "(c|g|p)ar" => The car is parked in the garage. 在线练习 2.6 | 或运算符或运算符就表示或, 用作判断条件. 例如 (T|t)he|car 匹配 (T|t)he 或 car. "(T|t)he|car" => The car is parked in the garage. 在线练习 2.7 转码特殊字符反斜线 \ 在表达式中用于转码紧跟其后的字符. 用于指定 { } [ ] / \ + * . $ ^ | ? 这些特殊字符. 如果想要匹配这些特殊字符则要在其前面加上反斜线 \. 例如 . 是用来匹配除换行符外的所有字符的. 如果想要匹配句子中的 . 则要写成 \. 以下这个例子 \.?是选择性匹配. "(f|c|m)at\.?" => The fat cat sat on the mat. 在线练习 2.8 锚点在正则表达式中, 想要匹配指定开头或结尾的字符串就要使用到锚点. ^ 指定开头, $ 指定结尾. 2.8.1 ^ 号^ 用来检查匹配的字符串是否在所匹配字符串的开头. 例如, 在 abc 中使用表达式 ^a 会得到结果 a. 但如果使用 ^b 将匹配不到任何结果. 因为在字符串 abc 中并不是以 b 开头. 例如, ^(T|t)he 匹配以 The 或 the 开头的字符串. "(T|t)he" => The car is parked in the garage. 在线练习 "^(T|t)he" => The car is parked in the garage. 在线练习 2.8.2 $ 号同理于 ^ 号, $ 号用来匹配字符是否是最后一个. 例如, (at\.)$ 匹配以 at. 结尾的字符串. "(at\.)" => The fat cat. sat. on the mat. 在线练习 "(at\.)$" => The fat cat. sat. on the mat. 在线练习 3. 简写字符集正则表达式提供一些常用的字符集简写. 如下: 简写 描述 . 除换行符外的所有字符 \w 匹配所有字母数字, 等同于 [a-zA-Z0-9_] \W 匹配所有非字母数字, 即符号, 等同于: [^\w] \d 匹配数字: [0-9] \D 匹配非数字: [^\d] \s 匹配所有空格字符, 等同于: [\t\n\f\r\p{Z}] \S 匹配所有非空格字符: [^\s] \f 匹配一个换页符 \n 匹配一个换行符 \r 匹配一个回车符 \t 匹配一个制表符 \v 匹配一个垂直制表符 \p 匹配 CR/LF (等同于 \r\n)，用来匹配 DOS 行终止符 4. 零宽度断言(前后预查)先行断言和后发断言都属于非捕获簇(不捕获文本 ，也不针对组合计进行计数).先行断言用于判断所匹配的格式是否在另一个确定的格式之前, 匹配结果不包含该确定格式(仅作为约束). 例如, 我们想要获得所有跟在 $ 符号后的数字, 我们可以使用正后发断言 (?&lt;=\$)[0-9\.]*.这个表达式匹配 $ 开头, 之后跟着 0,1,2,3,4,5,6,7,8,9,. 这些字符可以出现大于等于 0 次. 零宽度断言如下: 符号 描述 ?= 正先行断言-存在 ?! 负先行断言-排除 ?&lt;= 正后发断言-存在 ?&lt;! 负后发断言-排除 4.1 ?=... 正先行断言?=... 正先行断言, 表示第一部分表达式之后必须跟着 ?=...定义的表达式. 返回结果只包含满足匹配条件的第一部分表达式.定义一个正先行断言要使用 (). 在括号内部使用一个问号和等号: (?=...). 正先行断言的内容写在括号中的等号后面.例如, 表达式 (T|t)he(?=\sfat) 匹配 The 和 the, 在括号中我们又定义了正先行断言 (?=\sfat) ,即 The 和 the 后面紧跟着 (空格)fat. "(T|t)he(?=\sfat)" => The fat cat sat on the mat. 在线练习 4.2 ?!... 负先行断言负先行断言 ?! 用于筛选所有匹配结果, 筛选条件为 其后不跟随着断言中定义的格式.正先行断言 定义和 负先行断言 一样, 区别就是 = 替换成 ! 也就是 (?!...). 表达式 (T|t)he(?!\sfat) 匹配 The 和 the, 且其后不跟着 (空格)fat. "(T|t)he(?!\sfat)" => The fat cat sat on the mat. 在线练习 4.3 ?&lt;= ... 正后发断言正后发断言 记作(?&lt;=...) 用于筛选所有匹配结果, 筛选条件为 其前跟随着断言中定义的格式.例如, 表达式 (?&lt;=(T|t)he\s)(fat|mat) 匹配 fat 和 mat, 且其前跟着 The 或 the. "(? 在线练习 4.4 ?&lt;!... 负后发断言负后发断言 记作 (?&lt;!...) 用于筛选所有匹配结果, 筛选条件为 其前不跟随着断言中定义的格式.例如, 表达式 (?&lt;!(T|t)he\s)(cat) 匹配 cat, 且其前不跟着 The 或 the. "(?&lt;!(T|t)he\s)(cat)" => The cat sat on cat. 在线练习 5. 标志标志也叫模式修正符, 因为它可以用来修改表达式的搜索结果.这些标志可以任意的组合使用, 它也是整个正则表达式的一部分. 标志 描述 i 忽略大小写. g 全局搜索. m 多行的: 锚点元字符 ^ $ 工作范围在每行的起始. 5.1 忽略大小写 (Case Insensitive)修饰语 i 用于忽略大小写.例如, 表达式 /The/gi 表示在全局搜索 The, 在后面的 i 将其条件修改为忽略大小写, 则变成搜索 the 和 The, g 表示全局搜索. "The" => The fat cat sat on the mat. 在线练习 "/The/gi" => The fat cat sat on the mat. 在线练习 5.2 全局搜索 (Global search)修饰符 g 常用于执行一个全局搜索匹配, 即(不仅仅返回第一个匹配的, 而是返回全部).例如, 表达式 /.(at)/g 表示搜索 任意字符(除了换行) + at, 并返回全部结果. "/.(at)/" => The fat cat sat on the mat. 在线练习 "/.(at)/g" => The fat cat sat on the mat. 在线练习 5.3 多行修饰符 (Multiline)多行修饰符 m 常用于执行一个多行匹配. 像之前介绍的 (^,$) 用于检查格式是否是在待检测字符串的开头或结尾. 但我们如果想要它在每行的开头和结尾生效, 我们需要用到多行修饰符 m. 例如, 表达式 /at(.)?$/gm 表示小写字符 a 后跟小写字符 t , 末尾可选除换行符外任意字符. 根据 m 修饰符, 现在表达式匹配每行的结尾. "/.at(.)?$/" => The fat cat sat on the mat. 在线练习 "/.at(.)?$/gm" => The fat cat sat on the mat. 在线练习 6. 贪婪匹配与惰性匹配 (Greedy vs lazy matching)正则表达式默认采用贪婪匹配模式，在该模式下意味着会匹配尽可能长的子串。我们可以使用 ? 将贪婪匹配模式转化为惰性匹配模式。 "/(.*at)/" => The fat cat sat on the mat. 在线练习 "/(.*?at)/" => The fat cat sat on the mat. 在线练习 贡献 报告问题 开放合并请求 传播此文档 直接和我联系 ziishaned@gmail.com 或 许可证MIT &copy; Zeeshan Ahmad]]></content>
      <categories>
        <category>正则表达式</category>
      </categories>
      <tags>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo搭建独立博客全纪录]]></title>
    <url>%2F2019%2F08%2F18%2FHexo%E6%90%AD%E5%BB%BA%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2%E5%85%A8%E7%BA%AA%E5%BD%95%2F</url>
    <content type="text"><![CDATA[Hexo搭建独立博客全纪录前端工具【Hexo搭建独立博客全纪录】（一）使用Git和Github 【Hexo搭建独立博客全纪录】（二）使用Markdown 【Hexo搭建独立博客全纪录】（三）使用Hexo搭建博客 Node.js使用Node.js搭建Web服务器 那些年踩过的坑使用cmd：cd命令失效]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客搭建全攻略]]></title>
    <url>%2F2019%2F08%2F18%2FHexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%85%A8%E6%94%BB%E7%95%A5%2F</url>
    <content type="text"><![CDATA[Hexo 博客搭建指南Hexo的简洁、神秘让我跃跃欲试，在使用过程中遇到了很多问题，整理此文，一是方便其他技术人搭建自己的博客，二是给自己的学习之旅做个总结。本文未完结，欢迎star、fork，如果有错误，请不吝指出。我搭建的博客地址：limedroid.github.io 1 Hexo介绍Hexo是基于NodeJs的静态博客框架，简单、轻量，其生成的静态网页可以托管在Github和Heroku上。 超快速度 支持MarkDown 一键部署 丰富的插件 下面以我的博客为例，limedroid.github.io 2 环境准备2.1 安装node.js去nodejs官网下载对应系统的安装包，按提示安装。 检验安装成功： 1$ node -v 2.2 安装hexo1$ npm install hexo-cli -g 注意：Mac系统，则需要 1$ sudo npm install hexo-cli -g 3 利用Hexo搭建一个博客3.1 创建博客目录limedroid.github.io123$ hexo init limedroid.github.io$ cd limedroid.github.io$ npm install 3.2 生成静态页面12$ hexo clean$ hexo g g 即generate 3.3 运行1$ hexo s s 即server 然后打开浏览器，输入地址 localhost:4000 即可看到效果 4 发一篇文章试试4.1 命令方式1$ hexo new test 此时会在source/_posts目录下生成test.md文件，输入些许内容，然后保存. 生成下，看看效果 123$ hexo clean$ hexo g$ hexo s 访问 localhost:4000 即可 4.2 直接方式在 source/_posts/下新建一个.md文件也可 5 配置网站的设置大部分都在_config.yml文件中，详细配置可以查看官方文档 下面只列出简单常用配置 title -&gt; 网站标题 subtitle -&gt; 网站副标题 description -&gt; 网站描述 author -&gt; 您的名字 language -&gt; 网站使用的语言 坑：进行配置时，需要在冒号:后加一个英文空格 1title: Droidlover 6 换一个好看的主题Hexo 中有很多主题，可以在官网查看。这里我推荐hexo-theme-next，下面列举更换主题的一般套路： 6.1 下载主题资源1$ git clone https://github.com/iissnan/hexo-theme-next themes/next 6.2 应用下载的主题在网站配置文件_config.yml中，配置theme 1theme: next next是主题名称，具体的可查看主题的文档 6.3 主题其他配置可在/theme/{theme}/_config.yml 主题的配置文件下进行主题的配置。 接下来，可以执行万能的调试命令看看效果 123$ hexo clean$ hexo g$ hexo s 7 部署到Github7.1 有个github账号xxx7.2 创建一个xxx.github.io的public仓库如果您的账户名是limedroid,则需要创建一个limedroid.github.io的public仓库. 7.3 安装 hexo-deployer-git1$ npm install hexo-deployer-git --save 7.4 网站配置git在网站的_config.yml中配置deploy 1234deploy: type: git repo: &lt;repository url&gt; branch: [branch] branch为分支，默认为master,可以不配置repo为仓库地址，在github上新建仓库后，可复制此地址 7.5 部署1$ hexo d d 即deploy 8 贴标签，方便搜索8.1 两个确认 确认站点配置文件有 1tag_dir: tags 确认主题配置文件有 1tags: tags 8.2 新建tags页面1$ hexo new page tags 此时会在source/下生成tags/index.md文件 8.3 修改source/tags/index.md1234title: tagsdate: 2015-10-20 06:49:50type: &quot;tags&quot;comments: false date 可保持系统生成的时间， 12type: &quot;tags&quot;comments: false 很重要 8.4 在文章中添加tags在文章xx.md中添加： 1234tags: - Tag1 - Tag2 - Tag3 多个Tag可按上面的格式添加。 其文件头部类似： 123456title: TagEditTextdate: 2016-11-19 10:44:25tags: - Tag1 - Tag2 - Tag3 9 分类，给文章归档9.1 两个确认 确认站点配置文件打开了 1category_dir: categories 确认主题配置文件打开了 1categories: /categories 9.2 新建categories文件1$ hexo new page categories 此时会在source目录下生成categories/index.md文件 9.3 修改categories/index.md1234title: categoriesdate: 2015-10-20 06:49:50type: &quot;categories&quot;comments: false date 可保持系统生成的时间， 12type: &quot;categories&quot;comments: false 很重要 9.4 在文章中添加categories在文章xx.md中添加： 12categories: - cate 其文件头部类似： 1234title: TagEditTextdate: 2016-11-19 10:44:25categories: - cate 10 添加评论功能评论功能在国内一般使用多说。 10.1 注册多说账号10.2 创建站点需要注意的是，填写的多说域名不能更改，会在后面使用，在这里我配置成droidlover 10.3 配置在hexo主题配置文件中搜索： 1duoshuo_shortname ，然后打开开关，配置成前面设置的多说域名，如下： 1duoshuo_shortname: droidlover 有时，可能需要一段js 12345678910111213141516&lt;!-- 多说评论框 start --&gt; &lt;div class=&quot;ds-thread&quot; data-thread-key=&quot;请将此处替换成文章在你的站点中的ID&quot; data-title=&quot;请替换成文章的标题&quot; data-url=&quot;请替换成文章的网址&quot;&gt;&lt;/div&gt;&lt;!-- 多说评论框 end --&gt;&lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&gt;&lt;script type=&quot;text/javascript&quot;&gt;var duoshuoQuery = &#123;short_name:&quot;droidlover&quot;&#125;; (function() &#123; var ds = document.createElement(&apos;script&apos;); ds.type = &apos;text/javascript&apos;;ds.async = true; ds.src = (document.location.protocol == &apos;https:&apos; ? &apos;https:&apos; : &apos;http:&apos;) + &apos;//static.duoshuo.com/embed.js&apos;; ds.charset = &apos;UTF-8&apos;; (document.getElementsByTagName(&apos;head&apos;)[0] || document.getElementsByTagName(&apos;body&apos;)[0]).appendChild(ds); &#125;)(); &lt;/script&gt;&lt;!-- 多说公共JS代码 end --&gt; 现在，你可以运行看下效果了:) 11 加介绍页面，让全世界认识你]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GitHub + Hexo搭建自己博客(二)-Next主题配置]]></title>
    <url>%2F2019%2F08%2F18%2FGitHub%20%2B%20Hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E5%8D%9A%E5%AE%A2(%E4%BA%8C)-Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[一、基本配置在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。 为了描述方便，在以下说明中，将前者称为 站点配置文件， 后者称为 主题配置文件。 1、站点基本设置在站点配置文件 即博客根目录下的_config.yml中 123456789# Sitetitle: Sando博客 subtitle: 代码日记 description: 寄杂志第keywords:author: Sandolanguage: zh-Hanstimezone: 2、头像设置2.1 设置头像在站点配置文件 中新增avatar，值设置为头像的链接地址。地址可以是网络地址，也可以是本地地址（放置在source/images/ 目录下） 12#侧边栏头像设置avatar: /images/user.jpg 2.2 头像旋转动画打开\themes\next\source\css_common\components\sidebar\sidebar-author.styl，在里面添加如下代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf; /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/ /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.0s ease-out; -moz-transition: -moz-transform 1.0s ease-out; transition: transform 1.0s ease-out;&#125; img:hover &#123; /* 鼠标经过停止头像旋转 -webkit-animation-play-state:paused; animation-play-state:paused;*/ /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);&#125; /* Z 轴旋转动画 */@-webkit-keyframes play &#123; 0% &#123; -webkit-transform: rotateZ(0deg); &#125; 100% &#123; -webkit-transform: rotateZ(-360deg); &#125;&#125;@-moz-keyframes play &#123; 0% &#123; -moz-transform: rotateZ(0deg); &#125; 100% &#123; -moz-transform: rotateZ(-360deg); &#125;&#125;@keyframes play &#123; 0% &#123; transform: rotateZ(0deg); &#125; 100% &#123; transform: rotateZ(-360deg); &#125;&#125; 3、主题布局设置在主题配置文件即在next主题目录下的_config.yml文件中将scheme设定为Pisces,可根据个人喜好设置成其他的值 12345# Schemes#scheme: Muse#scheme: Mistscheme: Pisces#scheme: Gemini 4、菜单项设置在主题配置文件中的menu中设置，增添一个movies注：千万不要在这设置中文，后面的值那是查找文件的地方！如下 1234567891011menu: home: / || home about: /about/ || user tags: /tags/ || tags categories: /categories/ || th #archives: /archives #search: /search #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404 movies: /movies || film 这些配置都要与你主题目录下的languages文件中对应的yml文档里配置相关联。比如你在站点根目录中的配置文件设置language为zh-Hans，那么就要进入到主题目录下的languages文件中修改zh-Hans.yml，这样才能显示出菜单项新增的中文内容 1234567891011menu: home: 首页 archives: 归档 categories: 分类 tags: 标签 about: 关于 search: 搜索 schedule: 日程表 sitemap: 站点地图 commonweal: 公益404 movies: 电影 5、菜单项图标设置在主题配置文件中对应的字段是menu_icons。格式为item name：icon name，其中item name与所配置的菜单名字对应，icon name是Font Awesome图标的名字。而 enable 可用于控制是否显示图标，你可以设置成 false 来去掉图标。 123456789menu_icons: enable: true home: home about: user categories: th tags: tags archives: archive commonweal: heartbeat movies: film 新建的栏目icon，需要在Font Awesome图标库存在，例如新建的movies，在图标库中查询选择film图标，在主题配置文件的menu_icons中，更改movies: film 6、侧栏位置设置在主题配置文件中修改主题目录下sidebar的position值 1234sidebar: # Sidebar Position, available value: left | right (only for Pisces | Gemini). position: left #position: right 7、添加标签页面前面通过修改next主题下的_config.yml文件中的menu选项，可以在主页面的菜单栏添加标签选项，但是此时点击标签，跳转的页面会显示page not found。此时我们要新建一个页面在git bush中输入hexo new page tags 在新建的index.md文件中添加type: “tags” 12345---title: tagsdate: 2019-02-18 17:16:00type: &quot;tags&quot;--- 当要为某一篇文章添加标签，只需在blog/source/_post目录下的具体文章的tags中添加标签即可，如：成功后为 8、侧边栏社交栏目侧栏社交链接的修改包含两个部分，第一是链接，第二是链接图标。 两者配置均在 主题配置文件 中 （1）链接放置在 social 字段下，一行一个链接。其键值格式是 显示文本: 链接地址。 12345678# Social linkssocial: GitHub: https://github.com/your-user-name Twitter: https://twitter.com/your-user-name 微博: http://weibo.com/your-user-name 豆瓣: http://douban.com/people/your-user-name 知乎: http://www.zhihu.com/people/your-user-name # 等等 （2）设定链接的图标，对应的字段是 social_icons。其键值格式是 匹配键: Font Awesome 图标名称， 匹配键 与上一步所配置的链接的 显示文本 相同（大小写严格匹配），图标名称 是 Font Awesome 图标的名字（不必带 fa- 前缀）。 enable 选项用于控制是否显示图标，你可以设置成 false 来去掉图标。其中seoial_icons节点中后面的值是http://fontawesome.io/icons/ 中提供的图标的名称。之后其他链接如推特，微博等都可自行增减。 1234567# Social Iconssocial_icons: enable: true # Icon Mappings GitHub: github Twitter: twitter 微博: weibo 9、显示当前浏览进度主题配置文件 即themes/*/_config.yml中scrollpercent更改为true,b2t改为true返回顶部及浏览进度显示在左侧sidebar之下，改为false显示在右下角 二、个性化设置1、添加萌萌哒二次元看板娘英文介绍中文介绍 1.1、安装插件 npm install --save hexo-helper-live2d 1.2、配置请向根目录的 _config.yml 文件或主题的 _config.yml 文件中添加配置. 1234567891011121314151617live2d: enable: true scriptFrom: local pluginRootPath: live2dw/ pluginJsPath: lib/ pluginModelPath: assets/ tagMode: false log: false model: use: live2d-widget-model-&lt;你喜欢的模型名字&gt; display: position: right width: 150 height: 300 mobile: show: true 模型连接配置详细介绍 1.3、配置文件配置文件有很多方法这里主要讲我使用的方法：详情请参考如下： 英文介绍中文介绍 1.3.1 在博客根目录下建文件夹live2d_models；1.3.2 再在live2d_models下建文件夹&lt;你喜欢的模型名字&gt;；1.3.3 再在&lt;你喜欢的模型名字&gt;下建json文件：&lt;你喜欢的模型名字&gt;.model.json；1.4、安装模型在命令行（即Git Bash）运行以下命令即可： npm install --save live2d-widget-model-&lt;你喜欢的模型名字&gt;模型安装 1.5、查看结果在命令行（即Git Bash）运行以下命令， 在http://127.0.0.1:4000/查看测试结果： hexo clean &amp;&amp; hexo g &amp;&amp; hexo s 1.6、更改模型若更改模型请从第二步更改model.use；删除第三步原有文件，重新创建，安装模型，查看结果 2、实现fork me on github 2.1、点击 这里 挑选自己喜欢的样式，并复制代码 2.2、然后粘贴刚才复制的代码到themes/*/layout/_layout.swig文件中(放在&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;的下面)，并把href改为你的github地址 2.3、若位置不对，在 img 标签中修改 style=&quot;position:fixed;top:0;right:0&quot; 3、设置网站的图标Favicon在EasyIcon或者Iconfont中找一张（3232）的ico图标，并将图标名称改为favicon.ico，然后把图标放在/themes/next/source/images里，并且修改*主题配置文件** ： 4、首页文章添加阴影效果打开\themes\next\source\css_custom\custom.styl,向里面加入： 12345678//文章内容添加边框阴影.post &#123; margin-top: 0px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);&#125; 5、网站顶部加载条修改主题配置文件(_config.yml)将pace: false改为pace: true就行了，你还可以换不同样式的加载条，如下图： 6、统计文章阅读量通过leanCloud统计您网站的文章阅读量1.注册LeanCloud, 并创建一个你自己的应用;2.点击图片右上角的设置图标进入应用界面;3.到此，你的应用创建成功，继续表的创建,创建表，并将表的名字命名为：Counter, 如图:4.打开设置 -&gt; 应用key 获取App ID和App Key;5.最后打开主题配置文件: themes/*/_config.yml; 1234leancloud_visitors: enable: true app_id: #你的app_id app_key: #你的的app_key 6.完成配置并重新编译。到此您已经成功设置了阅读量的统计 7、文章加密访问打开themes-&gt;next-&gt;layout-&gt;_partials-&gt;head.swig文件,在以下位置插入这样一段代码： 12345678910&lt;script&gt; (function()&#123; if('&#123;&#123; page.password &#125;&#125;')&#123; if (prompt('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;')&#123; alert('密码错误！'); history.back(); &#125; &#125; &#125;)();&lt;/script&gt; 然后在文章上写上password: ****,如下： 8、修改链接URL编辑 站点配置文件下的 _config.yml 文件，修改其中的 permalink字段：permalink: :category/:title/ 9、文章置顶 9.1 安装插件 npm uninstall hexo-generator-index --savenpm install hexo-generator-index-pin-top --save 9.2 在需要置顶的文章中加上top即可，数值越大文章越靠前 1234567---title: &apos;GitHub + Hexo搭建自己博客(二) Next主题配置 &apos;date: 2019-02-19 15:35:40tags: [hexo,github]categories: blog,hexo,nexttop: 10--- 9.3 设置置顶标志 打开：/themes/*/layout/_macro/post.swig，定位到&lt;div class=&quot;post-meta&quot;&gt;标签下，插入如下代码： 12345&#123;% if post.top %&#125; &lt;i class="fa fa-thumb-tack"&gt;&lt;/i&gt; &lt;font color=7D26CD&gt;置顶&lt;/font&gt; &lt;span class="post-meta-divider"&gt;|&lt;/span&gt;&#123;% endif %&#125; 如下： 10、隐藏网页底部powered By Hexo / 强力驱动第一种方法：在主题配置文件中，找到footer,配置如下： 12345678910111213141516171819footer: # Specify the date when the site was setup. # If not defined, current year will be used. #since: 2015 # Icon between year and copyright info. icon: heart # If not defined, will be used `author` from Hexo main config. copyright: Sando # ------------------------------------------------------------- # Hexo link (Powered by Hexo). powered: false theme: # Theme &amp; scheme info link (Theme - NexT.scheme). enable: false # Version info of NexT after scheme info (vX.X.X). version: false 第二种方法：打开themes/next/layout/_partials/footer.swig,使用&lt;!-- --&gt;隐藏之间的代码即可，或者直接删除。位置如图： 11、实现统计功能1.在根目录下安装 hexo-wordcount,运行：npm install hexo-wordcount --save2.然后在主题配置文件中，配置如下： 12345678# Post wordcount display settings# Dependencies: https://github.com/willin/hexo-wordcountpost_wordcount: item_text: true wordcount: true min2read: true totalcount: false separated_meta: true 12、网站底部字数统计1.在根目录下安装 hexo-wordcount,运行：npm install hexo-wordcount --save2.然后在/themes/next/layout/_partials/footer.swig文件尾部加上： 1234&lt;div class="theme-info"&gt; &lt;div class="powered-by"&gt;&lt;/div&gt; &lt;span class="post-count"&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;&lt;/div&gt; 13、添加 README.md 文件每个项目下一般都有一个 README.md 文件，但是使用 hexo 部署到仓库后，项目下是没有 README.md 文件的。 在 Hexo 目录下的 source 根目录下添加一个 README.md 文件，修改站点配置文件 _config.yml，将 skip_render 参数的值设置为skip_render: README.md 14、修改文章底部的那个带#号的标签修改模板/themes/next/layout/_macro/post.swig，搜索 rel=”tag”&gt;#，将 # 换成 15、添加RSS1.站点根目录下安装插件，npm install --save hexo-generator-feed;2.在站点配置文件_config.yml中，添加如下内容： 123# Extensions## Plugins: http://hexo.io/plugins/plugins: hexo-generate-feed 3.然后再主题配置文件中配置rss; 1rss: /atom.xml 4.配置完之后运行：hexo clean &amp;&amp; hexo g &amp;&amp; hexo s;5.重新生成一次，你会在./public 文件夹中看到 atom.xml 文件。然后启动服务器查看是否有效，之后再部署到 Github 中 16、点击出现桃心效果1.在路径/themes/*/source/js/src里面新建love.js文件并将代码复制进去； 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950! function (e, t, a) &#123; function n() &#123; c(".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"), o(), r() &#125; function r() &#123; for (var e = 0; e &lt; d.length; e++) d[e].alpha &lt;= 0 ? (t.body.removeChild(d[e].el), d.splice(e, 1)) : (d[e].y--, d[e].scale += .004, d[e].alpha -= .013, d[e].el.style.cssText = "left:" + d[e].x + "px;top:" + d[e].y + "px;opacity:" + d[e].alpha + ";transform:scale(" + d[e].scale + "," + d[e].scale + ") rotate(45deg);background:" + d[e].color + ";z-index:99999"); requestAnimationFrame(r) &#125; function o() &#123; var t = "function" == typeof e.onclick &amp;&amp; e.onclick; e.onclick = function (e) &#123; t &amp;&amp; t(), i(e) &#125; &#125; function i(e) &#123; var a = t.createElement("div"); a.className = "heart", d.push(&#123; el: a, x: e.clientX - 5, y: e.clientY - 5, scale: 1, alpha: 1, color: s() &#125;), t.body.appendChild(a) &#125; function c(e) &#123; var a = t.createElement("style"); a.type = "text/css"; try &#123; a.appendChild(t.createTextNode(e)) &#125; catch (t) &#123; a.styleSheet.cssText = e &#125; t.getElementsByTagName("head")[0].appendChild(a) &#125; function s() &#123; return "rgb(" + ~~(255 * Math.random()) + "," + ~~(255 * Math.random()) + "," + ~~(255 * Math.random()) + ")" &#125; var d = []; e.requestAnimationFrame = function () &#123; return e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function (e) &#123; setTimeout(e, 1e3 / 60) &#125; &#125;(), n()&#125;(window, document); 2.在\themes\*\layout\_layout.swig文件末尾&lt;/body&gt;之前添加 12&lt;!-- 页面点击小红心 --&gt;&lt;script type="text/javascript" src="/js/src/love.js"&gt;&lt;/script&gt; 3.我选择的是社会主义核心价值观的特效，因为我们都是社会主义接班人！！ 123456789101112131415161718192021222324252627282930313233343536373839404142(function() &#123; var T_color = "";//字体颜色,你不设置就是随机颜色, var T_size = [10,20];//文字大小区间,不建议太大 var T_font_weight = "bold";//字体粗斜度--&gt;normal,bold,900 var AnimationTime = 1500;//文字消失总毫秒 var Move_up_Distance = 388;//文字移动距离,正数代表上移，反之下移 var a_index = 0; $("html").click(function(e)&#123; var a = new Array("富强", "民主", "文明", "和谐", "自由", "平等", "公正" ,"法治", "爱国", "敬业", "诚信", "友善"); var $i = $("&lt;span/&gt;").text(a[a_index]); a_index = (a_index + 1) % a.length; var x = e.pageX,y = e.pageY; var x_color = "#" + ('00000' + (Math.random() * 0x1000000 &lt;&lt; 0).toString(16)).substr(-6);//--&gt;随机颜色 //console.log(x_color); if(T_color.length&gt;=4)&#123; x_color = T_color; &#125; var x_size = Math.random()*(T_size[1]-T_size[0]) + T_size[0]; x_size += "px"; $i.css(&#123; "z-index": 99999, "top": y - 20, "left": x, "position": "absolute", "font-weight": "bold", "font-size":x_size, "color": x_color &#125;); $("html").append($i); $i.animate(&#123;"top": y-Move_up_Distance,"opacity": 0&#125;,AnimationTime,function() &#123; $i.remove(); &#125;); &#125;);&#125;)(); 17、修改文章内链接文本样式1.修改文件 themes\*\source\css\_common\components\post\post.styl，在末尾添加如下css样式，： 1234567891011// 文章内链接文本样式.post-body p a&#123; color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover &#123; color: #fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; &#125;&#125; 18、在文章末尾添加“本文结束”标记1.在路径 \themes\*\layout\_macro 中新建 passage-end-tag.swig 文件,并添加以下内容： 12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style="text-align:center;color: #ccc;font-size:14px;"&gt;-------------本文结束&lt;i class="fa fa-paw"&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 2.打开\themes\*\layout\_macro\post.swig文件，在post-body 之后， post-footer之前添加如下代码（post-footer之前两个DIV） 12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include 'passage-end-tag.swig' %&#125; &#123;% endif %&#125;&lt;/div&gt; 3.打开主题配置文件（_config.yml),在末尾添加： 123# 文章末尾添加“本文结束”标记passage_end_tag: enabled: true 4.完成以上设置之后，在每篇文章之后都会添加如此效果图 19、自定义鼠标样式打开 themes/*/source/css/_custom/custom.styl ,在里面写下如下代码： 1234567// 鼠标样式 * &#123; cursor: url("http://om8u46rmb.bkt.clouddn.com/sword2.ico"),auto!important &#125; :active &#123; cursor: url("http://om8u46rmb.bkt.clouddn.com/sword1.ico"),auto!important &#125; 20、Canvas背景在主题配置文件中，找到Canvas配置项，可以应用NNext自带的Canvas特效，如下： 想要更改颜色和数量？修改文件：/themes/next/source/lib/canvas-nest/canvas-nest.min.js,修改参考 21、修改内容区域的宽度 编辑主题的 source/css/_variables/custom.styl 文件，新增变量： 12345// 修改成你期望的宽度$content-desktop = 700px// 当视窗超过 1600px 后的宽度$content-desktop-large = 900px 但是此方法不适用于 Pisces Scheme，对于 Pisces Scheme，需要同时修改 header 的宽度、.main-inner 的宽度以及 .content-wrap 的宽度。例如，使用百分比（Pisces 的布局定义在 source/css/_schemes/Picses/_layout.styl 中） 123.header&#123; width: 60%; &#125;.container .main-inner &#123; width: 60%; &#125;.content-wrap &#123; width: calc(100% - 260px); &#125; 超过一定宽度后（一行内文字太多导致换行跨度太大），阅读体验不好，我调整的宽度为60%，各位可以自行测试进行调整 22、打赏功能1.准备支付宝和微信二维码，存放在themes/*/source/images2.在主题配置文件（_config.yml）中进行设置 1234# Rewardreward_comment: 谢谢请我吃辣条！wechatpay: /images/wechatpay.pngalipay: /images/alipay.jpg 3.修复图片闪动bug，修改next/source/css/_common/components/post/post-reward.styl，注释wechat:hover和alipay:hover 23、配置Valine评论系统1.Valine 是一款基于Leancloud的快速、简洁且高效的无后端评论系统；2.获取Leancloud的APP ID和 APP KEY, 上面第六步设置中已经介绍了获取方法；3.打开主题配置文件: themes/*/_config.yml; 12345678910111213# Valine.# You can get your appid and appkey from https://leancloud.cn# more info please open https://valine.js.orgvaline: enable: true appid: # your leancloud application appid appkey: # your leancloud application appkey notify: true # mail notifier , https://github.com/xCss/Valine/wiki verify: false # Verification code placeholder: 在这里说点什么吧... # comment box placeholder avatar: identicon # 评论表头样式 /mm/identicon/monsterid/wavatar/retro/hide guest_info: nick,mail,link # custom comment header pageSize: 10 # pagination size 4.其他相关配置和邮件提醒方式可查看Valline详细配置官网 24、添加搜索功能1.在根目录下安装hexo-generator-searchdb插件，npm install hexo-generator-searchdb --save;2.站点配置文件中添加以下字段 12345search: path: search.xml field: post format: html limit: 10000 3.编辑主题配置文件启用本地搜索 123# Local searchlocal_search: enable: true 25、不蒜子访问统计1.编辑 主题配置文件 themes/*/_config.yml中的busuanzi_count的配置项即可; 123456789101112131415busuanzi_count: # count values only if the other configs are false enable: true # custom uv span for the whole site site_uv: true site_uv_header: &lt;i class="fa fa-user"&gt;&lt;/i&gt; site_uv_footer: # custom pv span for the whole site site_pv: true site_pv_header: &lt;i class="fa fa-eye"&gt;&lt;/i&gt; site_pv_footer: # custom pv span for one page only page_pv: true page_pv_header: &lt;i class="fa fa-file-o"&gt;&lt;/i&gt; page_pv_footer: 2.找到主题调用不蒜子的swig文件\themes*\layout_third-party\analytics\busuanzi-counter.swig3.更改域名 1234把原有的：&lt;script async src="https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"&gt;&lt;/script&gt;域名改一下即可：&lt;script async src="https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"&gt;&lt;/script&gt; 26、添加404公益界面1.在根目录下输入hexo new page 404;2.打开刚新建的页面文件，默认在 Hexo 文件夹根目录下 /source/404/index.md；3.将文件名index.md改为404.html;4.在文件中写入内容，这里使用的是腾讯公益； 12345678910111213141516---title: 404 Not Found：该页无法显示toc: falsecomments: falsepermalink: /404---&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="UTF-8" /&gt; &lt;title&gt;404&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;script type="text/javascript" src="//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js" homePageName="返回首页" homePageUrl="https://sandop.github.io"&gt;&lt;/script&gt; &lt;/body&gt;&lt;/html&gt; 5.将返回首页的链接更改为自己的链接。 27、网页代码压缩网上有很多相关的博文，常规的做法是使用gulp来进行压缩，但是没有成功，所以更换为hexo-neat压缩插件进行。 1.站点根目录下安装插件npm install hexo-neat --save；2.修改站点配置文件，在末尾添加以下代码； 12345678910111213141516171819202122# hexo-neat# 博文压缩neat_enable: true# 压缩htmlneat_html: enable: true exclude:# 压缩css neat_css: enable: true exclude: - '**/*.min.css'# 压缩jsneat_js: enable: true mangle: true output: compress: exclude: - '**/*.min.js' - '**/jquery.fancybox.pack.js' - '**/index.js' 3.执行hexo clean &amp;&amp; hexo g &amp;&amp; hexo s查看效果。 28、添加网站底部跳动的心1.在主题配置文件中（themes/*/_config.yml）,更改footer; 12footer: icon: heart 2.编辑标签,在/themes/*/layout/_partials/footer.swig中，span中增加id=&quot;heart&quot;; 1&lt;span class="with-love" id="heart"&gt; 3.编辑css,在themes/*/source/css/_custom/custom.styl中更改样式如下： 12345678910111213// 自定义页脚跳动的心样式@keyframes heartAnimate &#123; 0%,100%&#123;transform:scale(1);&#125; 10%,30%&#123;transform:scale(0.9);&#125; 20%,40%,60%,80%&#123;transform:scale(1.1);&#125; 50%,70%&#123;transform:scale(1.1);&#125;&#125;#heart &#123; animation: heartAnimate 1.33s ease-in-out infinite;&#125;.with-love &#123; color: rgb(255, 113, 168);&#125;]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GitHub + Hexo搭建自己博客(三)-多设备管理]]></title>
    <url>%2F2019%2F08%2F18%2FGitHub%20%2B%20Hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E5%8D%9A%E5%AE%A2(%E4%B8%89)-%E5%A4%9A%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[介绍：正常情况下, 我们博客的相关配置信息都是在本地的, 并未上传服务器, 这样当我们想在其他设备, 比如公司的电脑或者原电脑重装了系统, 那么我们便无法再维护我们的博客了 一、环境配置安装Node.js安装git安装hexo 二、创建分支 hexo生成的静态博客文件都是上传到GitHub上的, 且默认放在master分支上, 而一些相关的配置文件都在本地 hexo的源文件（部署环境文件）可以都放在hexo分支上（可以新创建一个hexo分支），换新电脑时，直接git clone hexo分支 1、仓库新建hexo分支在Github的username.github.io仓库上新建一个hexo(分支名字可自定义)分支, 在下图箭头位置输入分支名字,完成创建； 2、设置默认分支切换到该hexo分支，并在该仓库-&gt;Settings-&gt;Branches-&gt;Default branch中将默认分支设为hexo,然后点击update进行保存； 三、配置文件上传Github该步骤需要在博客配置文件和主题配置文件所在的电脑上操作，想了解git相关命令，请移步这里 1.克隆hexo分支1.1 在合适位置将上述新建的hexo分支克隆到本地, git clone git@github.com:Sandop/Sandop.github.io.git，克隆地址换成自己的地址；1.2 在终端中cd进入该username.github.io文件目录,cd username.github.io；1.3 在当前目录使用Git Bash执行git branch命令查看当前所在分支，应为新建的分支hexo 2.上传部署文件2.1 先将本地博客的部署文件（Hexo博客项目目录下的全部文件）全部拷贝进username.github.io文件目录中去 2.2 准备将所有的文件都提交到hexo分支，提交时考虑以下注意事项： 将themes目录以内中的主题的.git目录删除（如果有），因为一个git仓库中不能包含另一个git仓库，否则提交主题文件夹会失败 可能有人会问，删除了themes目录中的.git不就不能git pull更新主题了吗，很简单，需要更新主题时在另一个地方git clone下来该主题的最新版本，然后将内容拷到当前主题目录即可 2.3 最后用终端或者管理工具将所有文件提交到hexo分支,命令git add .、git commit -m &quot;first commit hexo branch&quot;（引号内容可改）、git push; 2.4 master分支和hexo分支各自保存着一个版本。master分支用于保存博客静态资源，提供博客页面供人访问；hexo分支用于备份博客部署文件，供自己维护更新，两者在一个GitHub仓库内也不会有任何冲突 四、同步到其他电脑 将新电脑的生成的ssh key添加到GitHub账户上； 在新电脑上克隆username.github.io仓库的hexo分支到本地，此时本地git仓库处于hexo分支； 切换到username.github.io目录，执行npm install(由于仓库有一个.gitignore文件，里面默认是忽略掉 node_modules文件夹的，也就是说仓库的hexo分支并没有存储该目录，所以需要install下)； 在新电脑上安装hexo命令,npm install -g hexo； 到这里了就可以开始在自己的新电脑上写博客了！ 5.1 编辑、撰写文章或其他博客更新改动 5.2 依次执行git add .、git commit -m &#39;***&#39;（引号内容为描述提交内容）、git push指令，保证xxx分支版本最新 5.3 执行hexo clean &amp;&amp; hexo g &amp;&amp; hexo d指令，完成后就会发现，最新改动已经更新到master分支了，两个分支互不干扰！ 每次换电脑更新博客的时候, 在修改之前最好也要git pull拉取一下最新的更新]]></content>
      <categories>
        <category>Github</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GitHub + Hexo搭建自己博客(一)-基本内容]]></title>
    <url>%2F2019%2F08%2F18%2FGitHub%20%2B%20Hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E5%8D%9A%E5%AE%A2(%E4%B8%80)-%E5%9F%BA%E6%9C%AC%E5%86%85%E5%AE%B9%2F</url>
    <content type="text"><![CDATA[一、基本环境1、安装Node.js和配置好Node.js环境NodeJs安装（Windows版本） 2、安装Git和配置好Git环境Git安装 二、Hexo安装1、在自己认为合适的地方创建文件夹，并进入 2、安装Hexo，输入npm install hexo -g,并检查是否安装成功hexo -v 3、初始化文件，输入hexo init 4、安装所需组件，输入npm install 5、生成静态文件，输入hexo g 或者 hexo generate 6、启动本地服务，输入hexo s 或者 hexo server 若页面一直无法跳转，那么可能端口被占用了。此时我们ctrl+c停止服务器，接着输入hexo server -p 端口号来改变端口号，例如hexo server -p 5000 7、若能看见如下图就成功啦 三、创建GitHub仓库1、创建项目 注意：项目必须要遵守格式：账户名.github.io 2、查看项目在新建项目的setting设置中，可以看到GitHub Pages板块，如下图说明创建成功，点击https://账户名.github.io/可以看到自己的博客 四、关联博客1、设置Git的user name和email如果是第一次使用Git需要在Git Base Here 中分别输入git config --global user.name &quot;用户名&quot; 及 git config --global user.name &quot;邮箱&quot; 2、创建SSH Key在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。 也可以输入cd ~/.ssh检查是否有.ssh文件夹，输入ls，列出该文件下的内容。下图说明存在 如果没有，打开Git Bash，创建SSH Key： ssh-keygen -t rsa -C &quot;youremail@example.com&quot; 你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。 如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。 3、添加SSH Key(1).登陆GitHub，打开“settings”，“SSH and GPG Keys”页面(2).填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容(3).点“Add Key”，你就应该看到已经添加的Key(4).输入ssh -T git@github.com，测试添加ssh是否成功。如果看到Hi后面是你的用户名，就说明成功了 4、配置Deployment在博客的根目录文件夹中，找到_config.yml文件 1234deploy: type: git repository: git@github.com:Sandop/Sandop.github.io.git branch: master 注意： 1.每个冒号之后必须有空格；2.repository中的用户名更改为自己的用户名 5、安装扩展在生成以及部署文章之前，需要安装一个扩展npm install hexo-deployer-git --save 6、生成部署输入命令hexo g及hexo d 7、部署成功部署成功后访问你的地址：http://用户名.github.io。那么将看到自己的博客 五、设置主题在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。 为了描述方便，在以下说明中，将前者称为 站点配置文件， 后者称为 主题配置文件。 PS：需要特别注意的地方是，冒号后面必须有一个空格，否则可能会出问题。 1、安装 NexT主题在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码： git clone https://github.com/iissnan/hexo-theme-next themes/next 2、启用主题当 克隆/下载 完成后，打开 站点配置文件， 找到 theme 字段，并将其值更改为 next。 3、查看效果在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。然后在本地查看效果 hexo s -g //生成静态文件，启动本地服务 4、同步博客在本地浏览没有问题之后就可以同步到博客 执行hexo d 5、访问我的hexo+github博客可以访问我的git博客来查看效果： https://sandop.github.io/]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F08%2F18%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hexo常用命令汇总]]></title>
    <url>%2F2019%2F08%2F12%2FHexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB%2F</url>
    <content type="text"><![CDATA[Hexo常用命令常见命令123456hexo new "postName" #新建文章hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）hexo deploy #部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本 缩写：1234hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy 组合命令：12hexo s -g #生成并本地预览hexo d -g #生成并上传 Hexo常用的命令行：123456789101112131415hexo help #查看帮助hexo init #初始化一个目录hexo new "postName" #新建文章hexo new page "pageName" #新建页面hexo generate #生成生成静态网页，可以在 public 目录查看整个网站的文件hexo server #本地预览，'Ctrl+C'关闭hexo deploy #部署.deploy目录hexo clean #清除缓存，强烈建议每次执行命令前先清理缓存，每次部署前先删除 .deploy 文件夹 简写：hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>常用命令</tag>
      </tags>
  </entry>
</search>
